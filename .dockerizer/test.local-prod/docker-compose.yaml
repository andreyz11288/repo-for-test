version: '3.7'
services:
  php:
    container_name: test.local-prod
    image: 'defaultvalue/php:8.1-production'
    user: 'docker:docker'
    sysctls:
      - net.ipv4.ip_unprivileged_port_start=0
    restart: always
    networks:
      default:
        aliases:
          - test.local
    labels:
      - traefik.enable=true
      - traefik.http.routers.test-local-http.rule=Host(`test.local`)
      - traefik.http.routers.test-local-http.entrypoints=http
      - traefik.http.routers.test-local-http.service=test-local-http
      - traefik.http.services.test-local-http.loadbalancer.server.port=80
      - traefik.http.services.test-local-http.loadbalancer.server.scheme=http
      - traefik.http.routers.test-local-https.rule=Host(`test.local`)
      - traefik.http.routers.test-local-https.entrypoints=https
      - traefik.http.routers.test-local-https.tls=true
      - traefik.http.routers.test-local-https.service=test-local-https
      - traefik.http.services.test-local-https.loadbalancer.server.port=443
      - traefik.http.services.test-local-https.loadbalancer.server.scheme=https
    environment:
      - COMPOSER_VERSION=2
    volumes:
      - '../../:/var/www/html'
      - '${DOCKERIZER_SSL_CERTIFICATES_DIR}:/certs'
      - './apache/virtual-host.conf:/etc/apache2/sites-enabled/000-default.conf:ro'
  mysql:
    image: 'mysql:8.0.28'
    restart: always
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 1
      MYSQL_DATABASE: magento_db
      MYSQL_USER: magento_user
      MYSQL_PASSWORD: 'dB1{_zF-S=ku:W@l'
    volumes:
      - 'mysql_prod_data:/var/lib/mysql'
      - './mysql/my.cnf:/etc/mysql/conf.d/zzz-my.cnf:ro'
      - './mysql_initdb:/docker-entrypoint-initdb.d:ro'
  elasticsearch:
    image: 'elasticsearch:7.16.3'
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - indices.query.bool.max_clause_count=10240
      - index.blocks.read_only_allow_delete
      - 'ES_JAVA_OPTS=-Xms1024m -Xmx1024m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    volumes:
      - 'elasticsearch_prod_data:/usr/share/elasticsearch/data:rw'
  redis:
    image: 'redis:6.2'
    restart: always
volumes:
  mysql_prod_data:
    external: false
  elasticsearch_prod_data:
    external: false
